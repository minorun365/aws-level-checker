AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: AWS Level Checker Lambda関数の定義

Conditions:
  IsDev: !Equals [!Ref Environment, 'dev']

Parameters:
  Environment:
    Type: String
    Description: デプロイ環境（dev/prd）
    AllowedValues:
      - dev
      - prd
  PdfBucketName:
    Type: String
    Description: PDFファイルを保存するS3バケット名（Terraformで作成したalc-dev-uploaded-pdf）
  BedrockInferenceProfileArn:
    Type: String
    Description: Bedrock推論プロファイルのARN
  LangfuseHost:
    Type: String
    Description: LangfuseのホストURL
  LangfuseSecretName:
    Type: String
    Description: AWS Secrets ManagerのLangfuse用シークレット名
  CognitoUserPoolId:
    Type: String
    Description: 既存のCognito User Pool ID

# 共通設定
Globals:
  Function:
    Runtime: python3.12
    MemorySize: 128
    Timeout: 30
    # Lambdaレイヤーの設定
    Layers:
      - !Ref LangChainLayer
      - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:12
    # 環境変数の設定
    Environment:
      Variables:
        BEDROCK_INFERENCE_PROFILE_ARN: !Ref BedrockInferenceProfileArn
        LANGFUSE_HOST: !Ref LangfuseHost
        LANGFUSE_SECRET_NAME: !Ref LangfuseSecretName

Resources:
  # LangChainレイヤー
  LangChainLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub 'alc-langchain-layer-${Environment}'
      Description: Layer for LangChain and related libraries
      ContentUri: layers/langchain/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain

  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub 'alc-api-${Environment}'
      StageName: !Ref Environment
      EndpointConfiguration:
        Type: REGIONAL
      Cors:
        AllowMethods: "OPTIONS,POST"
        AllowHeaders: "Content-Type,Authorization"
        AllowOrigin: "*"
        AllowCredentials: "true"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPoolId}'
        AddDefaultAuthorizerToCorsPreflight: false

  # PDFドキュメント処理用Lambda関数
  LoadDocumentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/load_pdf/
      Handler: app.lambda_handler
      Description: アップロードされたPDFファイルを処理するLambda関数
      MemorySize: 512    # PDFの処理に十分なメモリを確保
      Timeout: 60        # PDFの処理に十分な時間を確保
      Environment:
        Variables:
          PDF_BUCKET_NAME: !Ref PdfBucketName
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
              Resource: !Sub 'arn:aws:s3:::${PdfBucketName}/*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /load-pdf
            Method: post
            RestApiId: !Ref ApiGateway
        OptionsEvent:
          Type: Api
          Properties:
            Path: /load-pdf
            Method: options
            RestApiId: !Ref ApiGateway
            Auth:
              Authorizer: NONE

  # 評価出力用Lambda関数
  EvaluateOutputFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/evaluate/
      Handler: app.lambda_handler
      Description: ユーザーのAWSアウトプットをレベル判定するLambda関数
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /evaluate
            Method: post
            RestApiId: !Ref ApiGateway
        OptionsEvent:
          Type: Api
          Properties:
            Path: /evaluate
            Method: options
            RestApiId: !Ref ApiGateway
            Auth:
              Authorizer: NONE

  # ツイート生成用Lambda関数
  GenerateTweetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/tweet/
      Handler: app.lambda_handler
      Description: アウトプット判定結果をサマリーしてツイートを生成するLambda関数
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tweet
            Method: post
            RestApiId: !Ref ApiGateway
        OptionsEvent:
          Type: Api
          Properties:
            Path: /tweet
            Method: options
            RestApiId: !Ref ApiGateway
            Auth:
              Authorizer: NONE

  # URL処理用Lambda関数
  LoadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/load_url/
      Handler: app.lambda_handler
      Description: 指定されたURLからコンテンツを取得して処理するLambda関数
      MemorySize: 128
      Timeout: 29
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /load-url
            Method: post
            RestApiId: !Ref ApiGateway
        OptionsEvent:
          Type: Api
          Properties:
            Path: /load-url
            Method: options
            RestApiId: !Ref ApiGateway
            Auth:
              Authorizer: NONE

# 出力値の定義
Outputs:
  LoadDocumentFunctionArn:
    Description: PDFドキュメント処理Lambda関数のARN
    Value: !GetAtt LoadDocumentFunction.Arn

  EvaluateOutputFunctionArn:
    Description: 評価出力Lambda関数のARN
    Value: !GetAtt EvaluateOutputFunction.Arn

  GenerateTweetFunctionArn:
    Description: ツイート生成Lambda関数のARN
    Value: !GetAtt GenerateTweetFunction.Arn

  LoadUrlFunctionArn:
    Description: URL処理Lambda関数のARN
    Value: !GetAtt LoadUrlFunction.Arn

  ApiEndpoint:
    Description: API GatewayのエンドポイントURL
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/'
