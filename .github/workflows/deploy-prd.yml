name: デプロイ（prd環境）

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        required: true
        default: 'dev'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: prd
    
    env:
      ENV: prd
    
    steps:
      - uses: actions/checkout@v4
      
      # AWS認証
      - name: AWS認証情報の設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: GitHubActionsSession

      # Terraformのデプロイ
      - name: Terraformのセットアップ
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.0'

      - name: Terraformの初期化
        working-directory: ./terraform/environments/prd
        run: terraform init

      - name: terraform.tfvarsの作成
        working-directory: ./terraform/environments/prd
        run: |
          cat << EOF > terraform.tfvars
          existing_cognito_user_pool_id = "${{ vars.COGNITO_USER_POOL_ID }}"
          existing_cognito_client_id    = "${{ secrets.VITE_COGNITO_CLIENT_ID }}"
          domain_name                   = "${{ env.ENV == 'prd' && 'checker.minoruonda.com' || 'dev-checker.minoruonda.com' }}"
          document_bucket_name          = "alc-${{ env.ENV }}-uploaded-pdf"
          frontend_bucket_name          = "alc-${{ env.ENV }}-frontend"
          allowed_origin               = "https://${{ env.ENV == 'prd' && 'checker.minoruonda.com' || 'dev-checker.minoruonda.com' }}"
          EOF

      - name: Terraformのデプロイ
        working-directory: ./terraform/environments/prd
        run: |
          terraform plan -var-file=terraform.tfvars
          terraform apply -auto-approve -var-file=terraform.tfvars

      # バックエンドのデプロイ
      - name: Python 3.12のセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: SAM CLIのインストール
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: LangChainレイヤーのセットアップ
        working-directory: ./backend/layers/langchain
        run: |
          mkdir -p python
          pip install --platform manylinux2014_x86_64 --implementation cp --python-version 3.12 --only-binary=:all: --target python/ -r requirements.txt

      - name: SAMビルド
        working-directory: ./backend
        run: sam build

      - name: SAMデプロイ
        working-directory: ./backend
        run: |
          sam deploy --stack-name alc-${{ env.ENV }} --no-confirm-changeset --no-fail-on-empty-changeset \
            --parameter-overrides \
              Environment=${{ env.ENV }} \
              PdfBucketName=alc-${{ env.ENV }}-uploaded-pdf \
              BedrockInferenceProfileArn=${{ vars.BEDROCK_INFERENCE_PROFILE_ARN }} \
              LangfuseHost=${{ vars.LANGFUSE_HOST }} \
              LangfuseSecretName=alc-${{ env.ENV }}-langfuse \
              CognitoUserPoolId=${{ vars.COGNITO_USER_POOL_ID }}

      # フロントエンドのデプロイ
      - name: Node.jsのセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 依存ライブラリのインストール
        working-directory: ./frontend
        run: npm install
        
      - name: ビルド
        working-directory: ./frontend
        env:
          VITE_SITE_URL: "https://${{ env.ENV == 'prd' && 'checker.minoruonda.com' || 'dev-checker.minoruonda.com' }}"
          VITE_COGNITO_DOMAIN: ${{ vars.VITE_COGNITO_DOMAIN }}
          VITE_COGNITO_AUTHORITY: ${{ vars.VITE_COGNITO_AUTHORITY }}
          VITE_API_ENDPOINT: ${{ vars.VITE_API_ENDPOINT }}
          VITE_COGNITO_CLIENT_ID: ${{ secrets.VITE_COGNITO_CLIENT_ID }}
          VITE_LANGFUSE_PUBLIC_KEY: ${{ secrets.VITE_LANGFUSE_PUBLIC_KEY }}
        run: npm run build:prd
        
      - name: S3へデプロイ
        run: |
          aws s3 sync ./frontend/dist/ s3://alc-${{ env.ENV }}-frontend/ --delete
          
      - name: CloudFrontのキャッシュ削除
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      # Langfuseプロンプトの更新
      - name: Langfuseライブラリのインストール
        run: pip install langfuse

      - name: プロンプトの更新
        working-directory: ./prompts
        env:
          LANGFUSE_PUBLIC_KEY: ${{ secrets.VITE_LANGFUSE_PUBLIC_KEY }}
          LANGFUSE_SECRET_KEY: ${{ secrets.LANGFUSE_SECRET_KEY }}
          LANGFUSE_HOST: ${{ vars.LANGFUSE_HOST }}
        run: python update_prompts.py
